{
  "Resources": {
    "VPCutworzonawCDKC9668817": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "172.16.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "HighAvailabilityCdkStack/VPC_utworzona_w_CDK"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "HighAvailabilityCdkStack/VPC_utworzona_w_CDK/Resource"
      }
    },
    "VPCutworzonawCDKPublicsubnetSubnet1SubnetC295C979": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "172.16.0.0/24",
        "VpcId": {
          "Ref": "VPCutworzonawCDKC9668817"
        },
        "AvailabilityZone": "eu-central-1a",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public-subnet"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "HighAvailabilityCdkStack/VPC_utworzona_w_CDK/Public-subnetSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "HighAvailabilityCdkStack/VPC_utworzona_w_CDK/Public-subnetSubnet1/Subnet"
      }
    },
    "VPCutworzonawCDKPublicsubnetSubnet1RouteTableFD5FF5BD": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPCutworzonawCDKC9668817"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "HighAvailabilityCdkStack/VPC_utworzona_w_CDK/Public-subnetSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "HighAvailabilityCdkStack/VPC_utworzona_w_CDK/Public-subnetSubnet1/RouteTable"
      }
    },
    "VPCutworzonawCDKPublicsubnetSubnet1RouteTableAssociation1B6259C8": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCutworzonawCDKPublicsubnetSubnet1RouteTableFD5FF5BD"
        },
        "SubnetId": {
          "Ref": "VPCutworzonawCDKPublicsubnetSubnet1SubnetC295C979"
        }
      },
      "Metadata": {
        "aws:cdk:path": "HighAvailabilityCdkStack/VPC_utworzona_w_CDK/Public-subnetSubnet1/RouteTableAssociation"
      }
    },
    "VPCutworzonawCDKPublicsubnetSubnet1DefaultRouteE0D87785": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCutworzonawCDKPublicsubnetSubnet1RouteTableFD5FF5BD"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VPCutworzonawCDKIGWF1675A60"
        }
      },
      "DependsOn": [
        "VPCutworzonawCDKVPCGW5430D6CA"
      ],
      "Metadata": {
        "aws:cdk:path": "HighAvailabilityCdkStack/VPC_utworzona_w_CDK/Public-subnetSubnet1/DefaultRoute"
      }
    },
    "VPCutworzonawCDKPublicsubnetSubnet2Subnet3048566B": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "172.16.1.0/24",
        "VpcId": {
          "Ref": "VPCutworzonawCDKC9668817"
        },
        "AvailabilityZone": "eu-central-1b",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public-subnet"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "HighAvailabilityCdkStack/VPC_utworzona_w_CDK/Public-subnetSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "HighAvailabilityCdkStack/VPC_utworzona_w_CDK/Public-subnetSubnet2/Subnet"
      }
    },
    "VPCutworzonawCDKPublicsubnetSubnet2RouteTable5BD4FDBD": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPCutworzonawCDKC9668817"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "HighAvailabilityCdkStack/VPC_utworzona_w_CDK/Public-subnetSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "HighAvailabilityCdkStack/VPC_utworzona_w_CDK/Public-subnetSubnet2/RouteTable"
      }
    },
    "VPCutworzonawCDKPublicsubnetSubnet2RouteTableAssociation6C7148F1": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCutworzonawCDKPublicsubnetSubnet2RouteTable5BD4FDBD"
        },
        "SubnetId": {
          "Ref": "VPCutworzonawCDKPublicsubnetSubnet2Subnet3048566B"
        }
      },
      "Metadata": {
        "aws:cdk:path": "HighAvailabilityCdkStack/VPC_utworzona_w_CDK/Public-subnetSubnet2/RouteTableAssociation"
      }
    },
    "VPCutworzonawCDKPublicsubnetSubnet2DefaultRoute7A694786": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCutworzonawCDKPublicsubnetSubnet2RouteTable5BD4FDBD"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VPCutworzonawCDKIGWF1675A60"
        }
      },
      "DependsOn": [
        "VPCutworzonawCDKVPCGW5430D6CA"
      ],
      "Metadata": {
        "aws:cdk:path": "HighAvailabilityCdkStack/VPC_utworzona_w_CDK/Public-subnetSubnet2/DefaultRoute"
      }
    },
    "VPCutworzonawCDKPublicsubnetSubnet3Subnet26F4D0B7": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "172.16.2.0/24",
        "VpcId": {
          "Ref": "VPCutworzonawCDKC9668817"
        },
        "AvailabilityZone": "eu-central-1c",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public-subnet"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "HighAvailabilityCdkStack/VPC_utworzona_w_CDK/Public-subnetSubnet3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "HighAvailabilityCdkStack/VPC_utworzona_w_CDK/Public-subnetSubnet3/Subnet"
      }
    },
    "VPCutworzonawCDKPublicsubnetSubnet3RouteTable094BC68D": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPCutworzonawCDKC9668817"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "HighAvailabilityCdkStack/VPC_utworzona_w_CDK/Public-subnetSubnet3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "HighAvailabilityCdkStack/VPC_utworzona_w_CDK/Public-subnetSubnet3/RouteTable"
      }
    },
    "VPCutworzonawCDKPublicsubnetSubnet3RouteTableAssociationED145D32": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCutworzonawCDKPublicsubnetSubnet3RouteTable094BC68D"
        },
        "SubnetId": {
          "Ref": "VPCutworzonawCDKPublicsubnetSubnet3Subnet26F4D0B7"
        }
      },
      "Metadata": {
        "aws:cdk:path": "HighAvailabilityCdkStack/VPC_utworzona_w_CDK/Public-subnetSubnet3/RouteTableAssociation"
      }
    },
    "VPCutworzonawCDKPublicsubnetSubnet3DefaultRoute03398F05": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCutworzonawCDKPublicsubnetSubnet3RouteTable094BC68D"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VPCutworzonawCDKIGWF1675A60"
        }
      },
      "DependsOn": [
        "VPCutworzonawCDKVPCGW5430D6CA"
      ],
      "Metadata": {
        "aws:cdk:path": "HighAvailabilityCdkStack/VPC_utworzona_w_CDK/Public-subnetSubnet3/DefaultRoute"
      }
    },
    "VPCutworzonawCDKIGWF1675A60": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "HighAvailabilityCdkStack/VPC_utworzona_w_CDK"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "HighAvailabilityCdkStack/VPC_utworzona_w_CDK/IGW"
      }
    },
    "VPCutworzonawCDKVPCGW5430D6CA": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "VPCutworzonawCDKC9668817"
        },
        "InternetGatewayId": {
          "Ref": "VPCutworzonawCDKIGWF1675A60"
        }
      },
      "Metadata": {
        "aws:cdk:path": "HighAvailabilityCdkStack/VPC_utworzona_w_CDK/VPCGW"
      }
    },
    "cdkSecurity08E5ECD2": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Pozwalaj na SSH i http",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Pozwalaj na ssh z dowolnego adresu ip",
            "FromPort": 22,
            "IpProtocol": "tcp",
            "ToPort": 22
          },
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Pozwalaj na http z dowolnego adresu ip",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80
          }
        ],
        "VpcId": {
          "Ref": "VPCutworzonawCDKC9668817"
        }
      },
      "Metadata": {
        "aws:cdk:path": "HighAvailabilityCdkStack/cdkSecurity/Resource"
      }
    },
    "cdkSecurityfromHighAvailabilityCdkStackcdkSecurity934D8E5780C10C60C4": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "Load balancer to target",
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "cdkSecurity08E5ECD2",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "cdkSecurity08E5ECD2",
            "GroupId"
          ]
        },
        "ToPort": 80
      },
      "Metadata": {
        "aws:cdk:path": "HighAvailabilityCdkStack/cdkSecurity/from HighAvailabilityCdkStackcdkSecurity934D8E57:80"
      }
    },
    "PierwszagrupaInstanceRole930F93BB": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "ec2.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "HighAvailabilityCdkStack/Pierwszagrupa"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "HighAvailabilityCdkStack/Pierwszagrupa/InstanceRole/Resource"
      }
    },
    "PierwszagrupaInstanceProfile10A0285D": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "PierwszagrupaInstanceRole930F93BB"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "HighAvailabilityCdkStack/Pierwszagrupa/InstanceProfile"
      }
    },
    "PierwszagrupaLaunchConfigB45C738C": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "InstanceType": "t2.micro",
        "IamInstanceProfile": {
          "Ref": "PierwszagrupaInstanceProfile10A0285D"
        },
        "KeyName": "guru-koby5i-20210205_EC2_MyUSE1KP",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "cdkSecurity08E5ECD2",
              "GroupId"
            ]
          }
        ],
        "UserData": {
          "Fn::Base64": "#!/bin/bash\nsudo su\nsudo yum update -y\nsudo yum install -y httpd\nsudo systemctl start httpd\nsudo systemctl enable httpd\nsudo echo \"Witaj świecie z $(hostname -f)\" > /var/www/html/index.html"
        }
      },
      "DependsOn": [
        "PierwszagrupaInstanceRole930F93BB"
      ],
      "Metadata": {
        "aws:cdk:path": "HighAvailabilityCdkStack/Pierwszagrupa/LaunchConfig"
      }
    },
    "PierwszagrupaASGE4472424": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "MaxSize": "5",
        "MinSize": "1",
        "LaunchConfigurationName": {
          "Ref": "PierwszagrupaLaunchConfigB45C738C"
        },
        "Tags": [
          {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": "HighAvailabilityCdkStack/Pierwszagrupa"
          }
        ],
        "TargetGroupARNs": [
          {
            "Ref": "LBListenerApplicationFleetGroupF144153C"
          }
        ],
        "VPCZoneIdentifier": [
          {
            "Ref": "VPCutworzonawCDKPublicsubnetSubnet1SubnetC295C979"
          }
        ]
      },
      "UpdatePolicy": {
        "AutoScalingScheduledAction": {
          "IgnoreUnmodifiedGroupSizeProperties": true
        }
      },
      "Metadata": {
        "aws:cdk:path": "HighAvailabilityCdkStack/Pierwszagrupa/ASG"
      }
    },
    "PierwszagrupaScalingPolicyLimitIngressPerInstance4D1C21CC": {
      "Type": "AWS::AutoScaling::ScalingPolicy",
      "Properties": {
        "AutoScalingGroupName": {
          "Ref": "PierwszagrupaASGE4472424"
        },
        "EstimatedInstanceWarmup": 30,
        "PolicyType": "TargetTrackingScaling",
        "TargetTrackingConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "ASGAverageNetworkIn"
          },
          "TargetValue": 100
        }
      },
      "Metadata": {
        "aws:cdk:path": "HighAvailabilityCdkStack/Pierwszagrupa/ScalingPolicyLimitIngressPerInstance/Resource"
      }
    },
    "DrugagrupaInstanceRole3E59A22C": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "ec2.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "HighAvailabilityCdkStack/Drugagrupa"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "HighAvailabilityCdkStack/Drugagrupa/InstanceRole/Resource"
      }
    },
    "DrugagrupaInstanceProfile86006713": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "DrugagrupaInstanceRole3E59A22C"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "HighAvailabilityCdkStack/Drugagrupa/InstanceProfile"
      }
    },
    "DrugagrupaLaunchConfig77FEAA56": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "InstanceType": "t2.micro",
        "IamInstanceProfile": {
          "Ref": "DrugagrupaInstanceProfile86006713"
        },
        "KeyName": "guru-koby5i-20210205_EC2_MyUSE1KP",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "cdkSecurity08E5ECD2",
              "GroupId"
            ]
          }
        ],
        "UserData": {
          "Fn::Base64": "#!/bin/bash\nsudo su\nsudo yum update -y\nsudo yum install -y httpd\nsudo systemctl start httpd\nsudo systemctl enable httpd\nsudo echo \"Witaj świecie z $(hostname -f)\" > /var/www/html/index.html"
        }
      },
      "DependsOn": [
        "DrugagrupaInstanceRole3E59A22C"
      ],
      "Metadata": {
        "aws:cdk:path": "HighAvailabilityCdkStack/Drugagrupa/LaunchConfig"
      }
    },
    "DrugagrupaASG65FD4F2C": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "MaxSize": "5",
        "MinSize": "1",
        "LaunchConfigurationName": {
          "Ref": "DrugagrupaLaunchConfig77FEAA56"
        },
        "Tags": [
          {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": "HighAvailabilityCdkStack/Drugagrupa"
          }
        ],
        "TargetGroupARNs": [
          {
            "Ref": "LBListenerApplicationFleetGroupF144153C"
          }
        ],
        "VPCZoneIdentifier": [
          {
            "Ref": "VPCutworzonawCDKPublicsubnetSubnet2Subnet3048566B"
          }
        ]
      },
      "UpdatePolicy": {
        "AutoScalingScheduledAction": {
          "IgnoreUnmodifiedGroupSizeProperties": true
        }
      },
      "Metadata": {
        "aws:cdk:path": "HighAvailabilityCdkStack/Drugagrupa/ASG"
      }
    },
    "DrugagrupaScalingPolicyKeepSpareCPU2774B7C0": {
      "Type": "AWS::AutoScaling::ScalingPolicy",
      "Properties": {
        "AutoScalingGroupName": {
          "Ref": "DrugagrupaASG65FD4F2C"
        },
        "EstimatedInstanceWarmup": 30,
        "PolicyType": "TargetTrackingScaling",
        "TargetTrackingConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "ASGAverageCPUUtilization"
          },
          "TargetValue": 10
        }
      },
      "Metadata": {
        "aws:cdk:path": "HighAvailabilityCdkStack/Drugagrupa/ScalingPolicyKeepSpareCPU/Resource"
      }
    },
    "TrzeciagrupaInstanceRole5FDAFCCA": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "ec2.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "HighAvailabilityCdkStack/Trzeciagrupa"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "HighAvailabilityCdkStack/Trzeciagrupa/InstanceRole/Resource"
      }
    },
    "TrzeciagrupaInstanceProfileAEEE6970": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "TrzeciagrupaInstanceRole5FDAFCCA"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "HighAvailabilityCdkStack/Trzeciagrupa/InstanceProfile"
      }
    },
    "TrzeciagrupaLaunchConfig366535EB": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "InstanceType": "t2.micro",
        "IamInstanceProfile": {
          "Ref": "TrzeciagrupaInstanceProfileAEEE6970"
        },
        "KeyName": "guru-koby5i-20210205_EC2_MyUSE1KP",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "cdkSecurity08E5ECD2",
              "GroupId"
            ]
          }
        ],
        "UserData": {
          "Fn::Base64": "#!/bin/bash\nsudo su\nsudo yum update -y\nsudo yum install -y httpd\nsudo systemctl start httpd\nsudo systemctl enable httpd\nsudo echo \"Witaj świecie z $(hostname -f)\" > /var/www/html/index.html"
        }
      },
      "DependsOn": [
        "TrzeciagrupaInstanceRole5FDAFCCA"
      ],
      "Metadata": {
        "aws:cdk:path": "HighAvailabilityCdkStack/Trzeciagrupa/LaunchConfig"
      }
    },
    "TrzeciagrupaASG5CCF0723": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "MaxSize": "5",
        "MinSize": "1",
        "LaunchConfigurationName": {
          "Ref": "TrzeciagrupaLaunchConfig366535EB"
        },
        "Tags": [
          {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": "HighAvailabilityCdkStack/Trzeciagrupa"
          }
        ],
        "TargetGroupARNs": [
          {
            "Ref": "LBListenerApplicationFleetGroupF144153C"
          }
        ],
        "VPCZoneIdentifier": [
          {
            "Ref": "VPCutworzonawCDKPublicsubnetSubnet3Subnet26F4D0B7"
          }
        ]
      },
      "UpdatePolicy": {
        "AutoScalingScheduledAction": {
          "IgnoreUnmodifiedGroupSizeProperties": true
        }
      },
      "Metadata": {
        "aws:cdk:path": "HighAvailabilityCdkStack/Trzeciagrupa/ASG"
      }
    },
    "TrzeciagrupaScalingPolicyLimitRPSB7FEA50F": {
      "Type": "AWS::AutoScaling::ScalingPolicy",
      "Properties": {
        "AutoScalingGroupName": {
          "Ref": "TrzeciagrupaASG5CCF0723"
        },
        "EstimatedInstanceWarmup": 30,
        "PolicyType": "TargetTrackingScaling",
        "TargetTrackingConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "ALBRequestCountPerTarget",
            "ResourceLabel": {
              "Fn::Join": [
                "",
                [
                  {
                    "Fn::Select": [
                      1,
                      {
                        "Fn::Split": [
                          "/",
                          {
                            "Ref": "LBListener49E825B4"
                          }
                        ]
                      }
                    ]
                  },
                  "/",
                  {
                    "Fn::Select": [
                      2,
                      {
                        "Fn::Split": [
                          "/",
                          {
                            "Ref": "LBListener49E825B4"
                          }
                        ]
                      }
                    ]
                  },
                  "/",
                  {
                    "Fn::Select": [
                      3,
                      {
                        "Fn::Split": [
                          "/",
                          {
                            "Ref": "LBListener49E825B4"
                          }
                        ]
                      }
                    ]
                  },
                  "/",
                  {
                    "Fn::GetAtt": [
                      "LBListenerApplicationFleetGroupF144153C",
                      "TargetGroupFullName"
                    ]
                  }
                ]
              ]
            }
          },
          "TargetValue": 20
        }
      },
      "DependsOn": [
        "LBListenerApplicationFleetGroupF144153C",
        "LBListener49E825B4"
      ],
      "Metadata": {
        "aws:cdk:path": "HighAvailabilityCdkStack/Trzeciagrupa/ScalingPolicyLimitRPS/Resource"
      }
    },
    "LB8A12904C": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "false"
          }
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "cdkSecurity08E5ECD2",
              "GroupId"
            ]
          }
        ],
        "Subnets": [
          {
            "Ref": "VPCutworzonawCDKPublicsubnetSubnet1SubnetC295C979"
          },
          {
            "Ref": "VPCutworzonawCDKPublicsubnetSubnet2Subnet3048566B"
          },
          {
            "Ref": "VPCutworzonawCDKPublicsubnetSubnet3Subnet26F4D0B7"
          }
        ],
        "Type": "application"
      },
      "DependsOn": [
        "VPCutworzonawCDKPublicsubnetSubnet1DefaultRouteE0D87785",
        "VPCutworzonawCDKPublicsubnetSubnet2DefaultRoute7A694786",
        "VPCutworzonawCDKPublicsubnetSubnet3DefaultRoute03398F05"
      ],
      "Metadata": {
        "aws:cdk:path": "HighAvailabilityCdkStack/LB/Resource"
      }
    },
    "LBListener49E825B4": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "LBListenerApplicationFleetGroupF144153C"
            },
            "Type": "forward"
          }
        ],
        "LoadBalancerArn": {
          "Ref": "LB8A12904C"
        },
        "Port": 80,
        "Protocol": "HTTP"
      },
      "Metadata": {
        "aws:cdk:path": "HighAvailabilityCdkStack/LB/Listener/Resource"
      }
    },
    "LBListenerApplicationFleetGroupF144153C": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckPath": "/index.html",
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false"
          }
        ],
        "TargetType": "instance",
        "VpcId": {
          "Ref": "VPCutworzonawCDKC9668817"
        }
      },
      "Metadata": {
        "aws:cdk:path": "HighAvailabilityCdkStack/LB/Listener/ApplicationFleetGroup/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/31SXW+CMBT9LXuv3TTb3pkPi4nJCBhfl0u56tXSkvZWYwj/fRUQWZbsqfd8cHs4sJDzN/nyBBc/U+VppqmQTc6gTiJS3w2qhWy2tRLLndmmS5GGQpPKQ2GQb9xjymxg3ECh8cE/uMR7qwiYrBnNt2FlGF10fgLjBa7DNQNKOAY5VGhY5KiCI75+Ohvq7oJ/iZXZO/S+FRDYegWazF42SQR5D8bH1hCMOiyt2dE+uDHgH+sG3B5542IzkRuk1MYyutC/iFYQVLLJbN/F/VwZz2AUps7uSGMrUINnUtpCWYCOUtxwjn0ndR3XdFnWUfvoNHRd3Cme+sgzmsFznyd6H3986wlsW5Ght8GpLmQKDirkftNX4Dr0X3diiWWVdFvaCmNLlEf/fJ6/yvl7/I+OnmjmgmGqUGb9+QO2A8QPYwIAAA=="
      },
      "Metadata": {
        "aws:cdk:path": "HighAvailabilityCdkStack/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Parameters": {
    "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
      "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
    },
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Outputs": {
    "Adresloadbalancera": {
      "Value": {
        "Fn::GetAtt": [
          "LB8A12904C",
          "DNSName"
        ]
      }
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "af-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}